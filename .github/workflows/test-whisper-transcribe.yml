#!/bin/bash
# .github/workflows/test-whisper-transcribe.yml - Create a GitHub Actions workflow to test the Whisper MP4 transcription script with a real MP4 file
# Generated by DevOpsZealot AI
# Branch: feature/nuvo1

set -e

# Color codes for better readability
GREEN="\033[0;32m"
YELLOW="\033[1;33m"
RED="\033[0;31m"
NC="\033[0m" # No Color

# Check dependencies

# Display usage instructions
show_usage() {
    echo "Usage: $(basename "$0") <input_mp4_file> [output_directory] [whisper_model]"
    echo ""
    echo "Arguments:"
    echo "  input_mp4_file    Path to the MP4 file to transcribe"
    echo "  output_directory  Directory to save the transcript (default: ./output)"
    echo "  whisper_model     Whisper model to use (default: base)"
    echo ""
    echo "Environment variables:"
    echo "  WHISPER_CLI_PATH  Path to the Whisper CLI executable (default: whisper)"
    echo "  WHISPER_MODEL     Default Whisper model to use (default: base)"
    echo ""
    echo "Example:"
    echo "  $(basename "$0") meeting.mp4 ./transcripts medium"
    echo "  WHISPER_CLI_PATH=/opt/whisper/bin/whisper $(basename "$0") video.mp4"
}

# Check arguments
if [ $# -lt 1 ]; then
    echo -e "${RED}Error: Missing input file${NC}"
    show_usage
    exit 1
fi

# Check if input file exists
if [ ! -f "$1" ]; then
    echo -e "${RED}Error: Input file not found: $1${NC}"
    exit 1
fi

# Check dependencies

# Process input arguments
INPUT_FILE="$1"
OUTPUT_DIR="${2:-./output}"
WHISPER_MODEL="${3:-${WHISPER_MODEL:-base}}"

# Main execution
echo -e "${GREEN}Starting MP4 to transcript process${NC}"
AUDIO_FILE=$(extract_audio "$INPUT_FILE")
TRANSCRIPT_FILE=$(transcribe_audio "$AUDIO_FILE" "$OUTPUT_DIR")

echo -e "${GREEN}Process completed successfully!${NC}"
echo -e "Transcript is available at: ${TRANSCRIPT_FILE}"
